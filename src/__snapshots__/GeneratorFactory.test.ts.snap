// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`processGlsl($definition.name): initial 1`] = `
Object {
  "glsl": "   return vec4(vec3(_noise(vec3(_st*scale, offset*time))), 1.0);",
  "inputs": Array [
    Object {
      "default": 10,
      "name": "scale",
      "type": "float",
    },
    Object {
      "default": 0.1,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "noise",
  "type": "src",
}
`;

exports[`processGlsl($definition.name): initial 2`] = `
Object {
  "glsl": "   vec3 color = vec3(.0);
   // Scale
   _st *= scale;
   // Tile the space
   vec2 i_st = floor(_st);
   vec2 f_st = fract(_st);
   float m_dist = 10.;  // minimun distance
   vec2 m_point;        // minimum point
   for (int j=-1; j<=1; j++ ) {
   for (int i=-1; i<=1; i++ ) {
   vec2 neighbor = vec2(float(i),float(j));
   vec2 p = i_st + neighbor;
   vec2 point = fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);
   point = 0.5 + 0.5*sin(time*speed + 6.2831*point);
   vec2 diff = neighbor + point - f_st;
   float dist = length(diff);
   if( dist < m_dist ) {
   m_dist = dist;
   m_point = point;
   }
   }
   }
   // Assign a color using the closest point position
   color += dot(m_point,vec2(.3,.6));
   color *= 1.0 - blending*m_dist;
   return vec4(color, 1.0);",
  "inputs": Array [
    Object {
      "default": 5,
      "name": "scale",
      "type": "float",
    },
    Object {
      "default": 0.3,
      "name": "speed",
      "type": "float",
    },
    Object {
      "default": 0.3,
      "name": "blending",
      "type": "float",
    },
  ],
  "name": "voronoi",
  "type": "src",
}
`;

exports[`processGlsl($definition.name): initial 3`] = `
Object {
  "glsl": "   vec2 st = _st;
   float r = sin((st.x-offset/frequency+time*sync)*frequency)*0.5  + 0.5;
   float g = sin((st.x+time*sync)*frequency)*0.5 + 0.5;
   float b = sin((st.x+offset/frequency+time*sync)*frequency)*0.5  + 0.5;
   return vec4(r, g, b, 1.0);",
  "inputs": Array [
    Object {
      "default": 60,
      "name": "frequency",
      "type": "float",
    },
    Object {
      "default": 0.1,
      "name": "sync",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "osc",
  "type": "src",
}
`;

exports[`processGlsl($definition.name): initial 4`] = `
Object {
  "glsl": "   vec2 st = _st * 2. - 1.;
   // Angle and radius from the current pixel
   float a = atan(st.x,st.y)+3.1416;
   float r = (2.*3.1416)/sides;
   float d = cos(floor(.5+a/r)*r-a)*length(st);
   return vec4(vec3(1.0-smoothstep(radius,radius + smoothing + 0.0000001,d)), 1.0);",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "sides",
      "type": "float",
    },
    Object {
      "default": 0.3,
      "name": "radius",
      "type": "float",
    },
    Object {
      "default": 0.01,
      "name": "smoothing",
      "type": "float",
    },
  ],
  "name": "shape",
  "type": "src",
}
`;

exports[`processGlsl($definition.name): initial 5`] = `
Object {
  "glsl": "   return vec4(_st, sin(time*speed), 1.0);",
  "inputs": Array [
    Object {
      "default": 0,
      "name": "speed",
      "type": "float",
    },
  ],
  "name": "gradient",
  "type": "src",
}
`;

exports[`processGlsl($definition.name): initial 6`] = `
Object {
  "glsl": "   //  vec2 uv = gl_FragCoord.xy/vec2(1280., 720.);
   return texture2D(tex, fract(_st));",
  "inputs": Array [
    Object {
      "default": NaN,
      "name": "tex",
      "type": "sampler2D",
    },
  ],
  "name": "src",
  "type": "src",
}
`;

exports[`processGlsl($definition.name): initial 7`] = `
Object {
  "glsl": "   return vec4(r, g, b, a);",
  "inputs": Array [
    Object {
      "default": 0,
      "name": "r",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "g",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "b",
      "type": "float",
    },
    Object {
      "default": 1,
      "name": "a",
      "type": "float",
    },
  ],
  "name": "solid",
  "type": "src",
}
`;

exports[`processGlsl($definition.name): initial 8`] = `
Object {
  "glsl": "   vec2 xy = _st - vec2(0.5);
   float ang = angle + speed *time;
   xy = mat2(cos(ang),-sin(ang), sin(ang),cos(ang))*xy;
   xy += 0.5;
   return xy;",
  "inputs": Array [
    Object {
      "default": 10,
      "name": "angle",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "speed",
      "type": "float",
    },
  ],
  "name": "rotate",
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): initial 9`] = `
Object {
  "glsl": "   vec2 xy = _st - vec2(offsetX, offsetY);
   xy*=(1.0/vec2(amount*xMult, amount*yMult));
   xy+=vec2(offsetX, offsetY);
   return xy;
   ",
  "inputs": Array [
    Object {
      "default": 1.5,
      "name": "amount",
      "type": "float",
    },
    Object {
      "default": 1,
      "name": "xMult",
      "type": "float",
    },
    Object {
      "default": 1,
      "name": "yMult",
      "type": "float",
    },
    Object {
      "default": 0.5,
      "name": "offsetX",
      "type": "float",
    },
    Object {
      "default": 0.5,
      "name": "offsetY",
      "type": "float",
    },
  ],
  "name": "scale",
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): initial 10`] = `
Object {
  "glsl": "   vec2 xy = vec2(pixelX, pixelY);
   return (floor(_st * xy) + 0.5)/xy;",
  "inputs": Array [
    Object {
      "default": 20,
      "name": "pixelX",
      "type": "float",
    },
    Object {
      "default": 20,
      "name": "pixelY",
      "type": "float",
    },
  ],
  "name": "pixelate",
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): initial 11`] = `
Object {
  "glsl": "   vec4 c2 = pow(_c0, vec4(gamma));
   c2 *= vec4(bins);
   c2 = floor(c2);
   c2/= vec4(bins);
   c2 = pow(c2, vec4(1.0/gamma));
   return vec4(c2.xyz, _c0.a);",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "bins",
      "type": "float",
    },
    Object {
      "default": 0.6,
      "name": "gamma",
      "type": "float",
    },
  ],
  "name": "posterize",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): initial 12`] = `
Object {
  "glsl": "   vec4 c2 = vec4(_c0);
   c2.r = fract(c2.r + r);
   c2.g = fract(c2.g + g);
   c2.b = fract(c2.b + b);
   c2.a = fract(c2.a + a);
   return vec4(c2.rgba);",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "r",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "g",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "b",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "a",
      "type": "float",
    },
  ],
  "name": "shift",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): initial 13`] = `
Object {
  "glsl": "   vec2 st = _st * vec2(repeatX, repeatY);
   st.x += step(1., mod(st.y,2.0)) * offsetX;
   st.y += step(1., mod(st.x,2.0)) * offsetY;
   return fract(st);",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "repeatX",
      "type": "float",
    },
    Object {
      "default": 3,
      "name": "repeatY",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offsetX",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offsetY",
      "type": "float",
    },
  ],
  "name": "repeat",
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): initial 14`] = `
Object {
  "glsl": "   vec2 st = _st * vec2(repeatX, repeatY);
   st.x += step(1., mod(st.y,2.0)) + _c0.r * offsetX;
   st.y += step(1., mod(st.x,2.0)) + _c0.g * offsetY;
   return fract(st);",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "repeatX",
      "type": "float",
    },
    Object {
      "default": 3,
      "name": "repeatY",
      "type": "float",
    },
    Object {
      "default": 0.5,
      "name": "offsetX",
      "type": "float",
    },
    Object {
      "default": 0.5,
      "name": "offsetY",
      "type": "float",
    },
  ],
  "name": "modulateRepeat",
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): initial 15`] = `
Object {
  "glsl": "   vec2 st = _st * vec2(reps, 1.0);
   //  float f =  mod(_st.y,2.0);
   st.y += step(1., mod(st.x,2.0))* offset;
   return fract(st);",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "reps",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "repeatX",
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): initial 16`] = `
Object {
  "glsl": "   vec2 st = _st * vec2(reps, 1.0);
   //  float f =  mod(_st.y,2.0);
   st.y += step(1., mod(st.x,2.0)) + _c0.r * offset;
   return fract(st);",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "reps",
      "type": "float",
    },
    Object {
      "default": 0.5,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "modulateRepeatX",
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): initial 17`] = `
Object {
  "glsl": "   vec2 st = _st * vec2(1.0, reps);
   //  float f =  mod(_st.y,2.0);
   st.x += step(1., mod(st.y,2.0))* offset;
   return fract(st);",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "reps",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "repeatY",
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): initial 18`] = `
Object {
  "glsl": "   vec2 st = _st * vec2(reps, 1.0);
   //  float f =  mod(_st.y,2.0);
   st.x += step(1., mod(st.y,2.0)) + _c0.r * offset;
   return fract(st);",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "reps",
      "type": "float",
    },
    Object {
      "default": 0.5,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "modulateRepeatY",
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): initial 19`] = `
Object {
  "glsl": "vec2 uv = _st - 0.5;
    
    uv *= 1.5 * scale;
    
    uv.y += tan((5.0 / 6.0) * 3.14159) * 0.5;
    uv.x = abs(uv.x);
    
    uv = _rotate(uv, vec2(0.5, 0.0), 5.0 / 6.0, true);
    
    float rescaled = 1.0;
    uv.x += 0.5;
    for (int i = 0; i < 12; i++) {
        if (i >= int(iters)) {
          break;
        }
        
        uv *= 3.0;
        rescaled *= 3.0;
        uv.x -= 1.5;
        
        uv.x = abs(uv.x);
        
        uv.x -= 0.5;
        uv = _rotate(uv, vec2(0.0, 0.0), 2.0 / 3.0, false);
    }
    
    uv /= rescaled;
    
    return uv;
",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "scale",
      "type": "float",
    },
    Object {
      "default": 5,
      "name": "iters",
      "type": "float",
    },
  ],
  "name": "koch",
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): initial 20`] = `
Object {
  "glsl": "   vec2 st = _st;
   st -= 0.5;
   float r = length(st);
   float a = atan(st.y, st.x);
   float pi = 2.*3.1416;
   a = mod(a,pi/nSides);
   a = abs(a-pi/nSides/2.);
   return r*vec2(cos(a), sin(a));",
  "inputs": Array [
    Object {
      "default": 4,
      "name": "nSides",
      "type": "float",
    },
  ],
  "name": "kaleid",
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): initial 21`] = `
Object {
  "glsl": "   vec2 st = _st - 0.5;
   float r = length(st);
   float a = atan(st.y, st.x);
   float pi = 2.*3.1416;
   a = mod(a,pi/nSides);
   a = abs(a-pi/nSides/2.);
   return (_c0.r+r)*vec2(cos(a), sin(a));",
  "inputs": Array [
    Object {
      "default": 4,
      "name": "nSides",
      "type": "float",
    },
  ],
  "name": "modulateKaleid",
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): initial 22`] = `
Object {
  "glsl": "
   _st.x += scrollX + time*speedX;
   _st.y += scrollY + time*speedY;
   return fract(_st);",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "scrollX",
      "type": "float",
    },
    Object {
      "default": 0.5,
      "name": "scrollY",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "speedX",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "speedY",
      "type": "float",
    },
  ],
  "name": "scroll",
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): initial 23`] = `
Object {
  "glsl": "   _st.x += scrollX + time*speed;
   return fract(_st);",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "scrollX",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "speed",
      "type": "float",
    },
  ],
  "name": "scrollX",
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): initial 24`] = `
Object {
  "glsl": "   _st.x += _c0.r*scrollX + time*speed;
   return fract(_st);",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "scrollX",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "speed",
      "type": "float",
    },
  ],
  "name": "modulateScrollX",
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): initial 25`] = `
Object {
  "glsl": "   _st.y += scrollY + time*speed;
   return fract(_st);",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "scrollY",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "speed",
      "type": "float",
    },
  ],
  "name": "scrollY",
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): initial 26`] = `
Object {
  "glsl": "   _st.y += _c0.r*scrollY + time*speed;
   return fract(_st);",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "scrollY",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "speed",
      "type": "float",
    },
  ],
  "name": "modulateScrollY",
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): initial 27`] = `
Object {
  "glsl": "   return (_c0+_c1)*amount + _c0*(1.0-amount);",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "add",
  "type": "combine",
}
`;

exports[`processGlsl($definition.name): initial 28`] = `
Object {
  "glsl": "   return (_c0-_c1)*amount + _c0*(1.0-amount);",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "sub",
  "type": "combine",
}
`;

exports[`processGlsl($definition.name): initial 29`] = `
Object {
  "glsl": "   return vec4(mix(_c0.rgb, _c1.rgb, _c1.a), _c0.a+_c1.a);",
  "inputs": Array [],
  "name": "layer",
  "type": "combine",
}
`;

exports[`processGlsl($definition.name): initial 30`] = `
Object {
  "glsl": "   return _c0*(1.0-amount)+_c1*amount;",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "blend",
  "type": "combine",
}
`;

exports[`processGlsl($definition.name): initial 31`] = `
Object {
  "glsl": "   return _c0*(1.0-amount)+(_c0*_c1)*amount;",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "mult",
  "type": "combine",
}
`;

exports[`processGlsl($definition.name): initial 32`] = `
Object {
  "glsl": "   return vec4(abs(_c0.rgb-_c1.rgb), max(_c0.a, _c1.a));",
  "inputs": Array [],
  "name": "diff",
  "type": "combine",
}
`;

exports[`processGlsl($definition.name): initial 33`] = `
Object {
  "glsl": "   //  return fract(st+(_c0.xy-0.5)*amount);
   return _st + _c0.xy*amount;",
  "inputs": Array [
    Object {
      "default": 0.1,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "modulate",
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): initial 34`] = `
Object {
  "glsl": "   vec2 xy = _st - vec2(0.5);
   xy*=(1.0/vec2(offset + multiple*_c0.r, offset + multiple*_c0.g));
   xy+=vec2(0.5);
   return xy;",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "multiple",
      "type": "float",
    },
    Object {
      "default": 1,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "modulateScale",
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): initial 35`] = `
Object {
  "glsl": "   vec2 xy = vec2(offset + _c0.x*multiple, offset + _c0.y*multiple);
   return (floor(_st * xy) + 0.5)/xy;",
  "inputs": Array [
    Object {
      "default": 10,
      "name": "multiple",
      "type": "float",
    },
    Object {
      "default": 3,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "modulatePixelate",
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): initial 36`] = `
Object {
  "glsl": "   vec2 xy = _st - vec2(0.5);
   float angle = offset + _c0.x * multiple;
   xy = mat2(cos(angle),-sin(angle), sin(angle),cos(angle))*xy;
   xy += 0.5;
   return xy;",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "multiple",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "modulateRotate",
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): initial 37`] = `
Object {
  "glsl": "   return _st + (vec2(_c0.g - _c0.r, _c0.b - _c0.g) * amount * 1.0/resolution);",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "modulateHue",
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): initial 38`] = `
Object {
  "glsl": "   return vec4((1.0-_c0.rgb)*amount + _c0.rgb*(1.0-amount), _c0.a);",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "invert",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): initial 39`] = `
Object {
  "glsl": "   vec4 c = (_c0-vec4(0.5))*vec4(amount) + vec4(0.5);
   return vec4(c.rgb, _c0.a);",
  "inputs": Array [
    Object {
      "default": 1.6,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "contrast",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): initial 40`] = `
Object {
  "glsl": "   return vec4(_c0.rgb + vec3(amount), _c0.a);",
  "inputs": Array [
    Object {
      "default": 0.4,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "brightness",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): initial 41`] = `
Object {
  "glsl": "   float a = _luminance(_c1.rgb);
   return vec4(_c0.rgb*a, a);",
  "inputs": Array [],
  "name": "mask",
  "type": "combine",
}
`;

exports[`processGlsl($definition.name): initial 42`] = `
Object {
  "glsl": "   float a = smoothstep(threshold-(tolerance+0.0000001), threshold+(tolerance+0.0000001), _luminance(_c0.rgb));
   return vec4(_c0.rgb*a, a);",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "threshold",
      "type": "float",
    },
    Object {
      "default": 0.1,
      "name": "tolerance",
      "type": "float",
    },
  ],
  "name": "luma",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): initial 43`] = `
Object {
  "glsl": "   return vec4(vec3(smoothstep(threshold-(tolerance+0.0000001), threshold+(tolerance+0.0000001), _luminance(_c0.rgb))), _c0.a);",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "threshold",
      "type": "float",
    },
    Object {
      "default": 0.04,
      "name": "tolerance",
      "type": "float",
    },
  ],
  "name": "thresh",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): initial 44`] = `
Object {
  "glsl": "   vec4 c = vec4(r, g, b, a);
   vec4 pos = step(0.0, c); // detect whether negative
   // if > 0, return r * _c0
   // if < 0 return (1.0-r) * _c0
   return vec4(mix((1.0-_c0)*abs(c), c*_c0, pos));",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "r",
      "type": "float",
    },
    Object {
      "default": 1,
      "name": "g",
      "type": "float",
    },
    Object {
      "default": 1,
      "name": "b",
      "type": "float",
    },
    Object {
      "default": 1,
      "name": "a",
      "type": "float",
    },
  ],
  "name": "color",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): initial 45`] = `
Object {
  "glsl": "   const vec3 W = vec3(0.2125, 0.7154, 0.0721);
   vec3 intensity = vec3(dot(_c0.rgb, W));
   return vec4(mix(intensity, _c0.rgb, amount), _c0.a);",
  "inputs": Array [
    Object {
      "default": 2,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "saturate",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): initial 46`] = `
Object {
  "glsl": "   vec3 c = _rgbToHsv(_c0.rgb);
   c.r += hue;
   //  c.r = fract(c.r);
   return vec4(_hsvToRgb(c), _c0.a);",
  "inputs": Array [
    Object {
      "default": 0.4,
      "name": "hue",
      "type": "float",
    },
  ],
  "name": "hue",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): initial 47`] = `
Object {
  "glsl": "   vec3 c = _rgbToHsv(_c0.rgb);
   c += vec3(amount);
   c = _hsvToRgb(c);
   c = fract(c);
   return vec4(c, _c0.a);",
  "inputs": Array [
    Object {
      "default": 0.005,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "colorama",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): initial 48`] = `
Object {
  "glsl": "   return texture2D(prevBuffer, fract(_st));",
  "inputs": Array [],
  "name": "prev",
  "type": "src",
}
`;

exports[`processGlsl($definition.name): initial 49`] = `
Object {
  "glsl": "   vec4 v = _c0 * s;
   return v.r + v.g + v.b + v.a;
   }
   float sum(vec2 _st, vec4 s) { // vec4 is not a typo, because argument type is not overloaded
   vec2 v = _st.xy * s.xy;
   return v.x + v.y;",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "scale",
      "type": "vec4",
    },
  ],
  "name": "sum",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): initial 50`] = `
Object {
  "glsl": "   return vec4(_c0.r * scale + offset);",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "scale",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "r",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): initial 51`] = `
Object {
  "glsl": "   return vec4(_c0.g * scale + offset);",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "scale",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "g",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): initial 52`] = `
Object {
  "glsl": "   return vec4(_c0.b * scale + offset);",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "scale",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "b",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): initial 53`] = `
Object {
  "glsl": "   return vec4(_c0.a * scale + offset);",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "scale",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "a",
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 1`] = `
Object {
  "glsl": "
  vec4 noise(vec2 _st, float scale, float offset) {
         return vec4(vec3(_noise(vec3(_st*scale, offset*time))), 1.0);
  }
",
  "inputs": Array [
    Object {
      "default": 10,
      "name": "scale",
      "type": "float",
    },
    Object {
      "default": 0.1,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "noise",
  "processed": true,
  "type": "src",
}
`;

exports[`processGlsl($definition.name): processed 2`] = `
Object {
  "glsl": "
  vec4 voronoi(vec2 _st, float scale, float speed, float blending) {
         vec3 color = vec3(.0);
   // Scale
   _st *= scale;
   // Tile the space
   vec2 i_st = floor(_st);
   vec2 f_st = fract(_st);
   float m_dist = 10.;  // minimun distance
   vec2 m_point;        // minimum point
   for (int j=-1; j<=1; j++ ) {
   for (int i=-1; i<=1; i++ ) {
   vec2 neighbor = vec2(float(i),float(j));
   vec2 p = i_st + neighbor;
   vec2 point = fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);
   point = 0.5 + 0.5*sin(time*speed + 6.2831*point);
   vec2 diff = neighbor + point - f_st;
   float dist = length(diff);
   if( dist < m_dist ) {
   m_dist = dist;
   m_point = point;
   }
   }
   }
   // Assign a color using the closest point position
   color += dot(m_point,vec2(.3,.6));
   color *= 1.0 - blending*m_dist;
   return vec4(color, 1.0);
  }
",
  "inputs": Array [
    Object {
      "default": 5,
      "name": "scale",
      "type": "float",
    },
    Object {
      "default": 0.3,
      "name": "speed",
      "type": "float",
    },
    Object {
      "default": 0.3,
      "name": "blending",
      "type": "float",
    },
  ],
  "name": "voronoi",
  "processed": true,
  "type": "src",
}
`;

exports[`processGlsl($definition.name): processed 3`] = `
Object {
  "glsl": "
  vec4 osc(vec2 _st, float frequency, float sync, float offset) {
         vec2 st = _st;
   float r = sin((st.x-offset/frequency+time*sync)*frequency)*0.5  + 0.5;
   float g = sin((st.x+time*sync)*frequency)*0.5 + 0.5;
   float b = sin((st.x+offset/frequency+time*sync)*frequency)*0.5  + 0.5;
   return vec4(r, g, b, 1.0);
  }
",
  "inputs": Array [
    Object {
      "default": 60,
      "name": "frequency",
      "type": "float",
    },
    Object {
      "default": 0.1,
      "name": "sync",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "osc",
  "processed": true,
  "type": "src",
}
`;

exports[`processGlsl($definition.name): processed 4`] = `
Object {
  "glsl": "
  vec4 shape(vec2 _st, float sides, float radius, float smoothing) {
         vec2 st = _st * 2. - 1.;
   // Angle and radius from the current pixel
   float a = atan(st.x,st.y)+3.1416;
   float r = (2.*3.1416)/sides;
   float d = cos(floor(.5+a/r)*r-a)*length(st);
   return vec4(vec3(1.0-smoothstep(radius,radius + smoothing + 0.0000001,d)), 1.0);
  }
",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "sides",
      "type": "float",
    },
    Object {
      "default": 0.3,
      "name": "radius",
      "type": "float",
    },
    Object {
      "default": 0.01,
      "name": "smoothing",
      "type": "float",
    },
  ],
  "name": "shape",
  "processed": true,
  "type": "src",
}
`;

exports[`processGlsl($definition.name): processed 5`] = `
Object {
  "glsl": "
  vec4 gradient(vec2 _st, float speed) {
         return vec4(_st, sin(time*speed), 1.0);
  }
",
  "inputs": Array [
    Object {
      "default": 0,
      "name": "speed",
      "type": "float",
    },
  ],
  "name": "gradient",
  "processed": true,
  "type": "src",
}
`;

exports[`processGlsl($definition.name): processed 6`] = `
Object {
  "glsl": "
  vec4 src(vec2 _st, sampler2D tex) {
         //  vec2 uv = gl_FragCoord.xy/vec2(1280., 720.);
   return texture2D(tex, fract(_st));
  }
",
  "inputs": Array [
    Object {
      "default": NaN,
      "name": "tex",
      "type": "sampler2D",
    },
  ],
  "name": "src",
  "processed": true,
  "type": "src",
}
`;

exports[`processGlsl($definition.name): processed 7`] = `
Object {
  "glsl": "
  vec4 solid(vec2 _st, float r, float g, float b, float a) {
         return vec4(r, g, b, a);
  }
",
  "inputs": Array [
    Object {
      "default": 0,
      "name": "r",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "g",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "b",
      "type": "float",
    },
    Object {
      "default": 1,
      "name": "a",
      "type": "float",
    },
  ],
  "name": "solid",
  "processed": true,
  "type": "src",
}
`;

exports[`processGlsl($definition.name): processed 8`] = `
Object {
  "glsl": "
  vec2 rotate(vec2 _st, float angle, float speed) {
         vec2 xy = _st - vec2(0.5);
   float ang = angle + speed *time;
   xy = mat2(cos(ang),-sin(ang), sin(ang),cos(ang))*xy;
   xy += 0.5;
   return xy;
  }
",
  "inputs": Array [
    Object {
      "default": 10,
      "name": "angle",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "speed",
      "type": "float",
    },
  ],
  "name": "rotate",
  "processed": true,
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): processed 9`] = `
Object {
  "glsl": "
  vec2 scale(vec2 _st, float amount, float xMult, float yMult, float offsetX, float offsetY) {
         vec2 xy = _st - vec2(offsetX, offsetY);
   xy*=(1.0/vec2(amount*xMult, amount*yMult));
   xy+=vec2(offsetX, offsetY);
   return xy;
   
  }
",
  "inputs": Array [
    Object {
      "default": 1.5,
      "name": "amount",
      "type": "float",
    },
    Object {
      "default": 1,
      "name": "xMult",
      "type": "float",
    },
    Object {
      "default": 1,
      "name": "yMult",
      "type": "float",
    },
    Object {
      "default": 0.5,
      "name": "offsetX",
      "type": "float",
    },
    Object {
      "default": 0.5,
      "name": "offsetY",
      "type": "float",
    },
  ],
  "name": "scale",
  "processed": true,
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): processed 10`] = `
Object {
  "glsl": "
  vec2 pixelate(vec2 _st, float pixelX, float pixelY) {
         vec2 xy = vec2(pixelX, pixelY);
   return (floor(_st * xy) + 0.5)/xy;
  }
",
  "inputs": Array [
    Object {
      "default": 20,
      "name": "pixelX",
      "type": "float",
    },
    Object {
      "default": 20,
      "name": "pixelY",
      "type": "float",
    },
  ],
  "name": "pixelate",
  "processed": true,
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): processed 11`] = `
Object {
  "glsl": "
  vec4 posterize(vec4 _c0, float bins, float gamma) {
         vec4 c2 = pow(_c0, vec4(gamma));
   c2 *= vec4(bins);
   c2 = floor(c2);
   c2/= vec4(bins);
   c2 = pow(c2, vec4(1.0/gamma));
   return vec4(c2.xyz, _c0.a);
  }
",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "bins",
      "type": "float",
    },
    Object {
      "default": 0.6,
      "name": "gamma",
      "type": "float",
    },
  ],
  "name": "posterize",
  "processed": true,
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 12`] = `
Object {
  "glsl": "
  vec4 shift(vec4 _c0, float r, float g, float b, float a) {
         vec4 c2 = vec4(_c0);
   c2.r = fract(c2.r + r);
   c2.g = fract(c2.g + g);
   c2.b = fract(c2.b + b);
   c2.a = fract(c2.a + a);
   return vec4(c2.rgba);
  }
",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "r",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "g",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "b",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "a",
      "type": "float",
    },
  ],
  "name": "shift",
  "processed": true,
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 13`] = `
Object {
  "glsl": "
  vec2 repeat(vec2 _st, float repeatX, float repeatY, float offsetX, float offsetY) {
         vec2 st = _st * vec2(repeatX, repeatY);
   st.x += step(1., mod(st.y,2.0)) * offsetX;
   st.y += step(1., mod(st.x,2.0)) * offsetY;
   return fract(st);
  }
",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "repeatX",
      "type": "float",
    },
    Object {
      "default": 3,
      "name": "repeatY",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offsetX",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offsetY",
      "type": "float",
    },
  ],
  "name": "repeat",
  "processed": true,
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): processed 14`] = `
Object {
  "glsl": "
  vec2 modulateRepeat(vec2 _st, vec4 _c0, float repeatX, float repeatY, float offsetX, float offsetY) {
         vec2 st = _st * vec2(repeatX, repeatY);
   st.x += step(1., mod(st.y,2.0)) + _c0.r * offsetX;
   st.y += step(1., mod(st.x,2.0)) + _c0.g * offsetY;
   return fract(st);
  }
",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "repeatX",
      "type": "float",
    },
    Object {
      "default": 3,
      "name": "repeatY",
      "type": "float",
    },
    Object {
      "default": 0.5,
      "name": "offsetX",
      "type": "float",
    },
    Object {
      "default": 0.5,
      "name": "offsetY",
      "type": "float",
    },
  ],
  "name": "modulateRepeat",
  "processed": true,
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): processed 15`] = `
Object {
  "glsl": "
  vec2 repeatX(vec2 _st, float reps, float offset) {
         vec2 st = _st * vec2(reps, 1.0);
   //  float f =  mod(_st.y,2.0);
   st.y += step(1., mod(st.x,2.0))* offset;
   return fract(st);
  }
",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "reps",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "repeatX",
  "processed": true,
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): processed 16`] = `
Object {
  "glsl": "
  vec2 modulateRepeatX(vec2 _st, vec4 _c0, float reps, float offset) {
         vec2 st = _st * vec2(reps, 1.0);
   //  float f =  mod(_st.y,2.0);
   st.y += step(1., mod(st.x,2.0)) + _c0.r * offset;
   return fract(st);
  }
",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "reps",
      "type": "float",
    },
    Object {
      "default": 0.5,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "modulateRepeatX",
  "processed": true,
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): processed 17`] = `
Object {
  "glsl": "
  vec2 repeatY(vec2 _st, float reps, float offset) {
         vec2 st = _st * vec2(1.0, reps);
   //  float f =  mod(_st.y,2.0);
   st.x += step(1., mod(st.y,2.0))* offset;
   return fract(st);
  }
",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "reps",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "repeatY",
  "processed": true,
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): processed 18`] = `
Object {
  "glsl": "
  vec2 modulateRepeatY(vec2 _st, vec4 _c0, float reps, float offset) {
         vec2 st = _st * vec2(reps, 1.0);
   //  float f =  mod(_st.y,2.0);
   st.x += step(1., mod(st.y,2.0)) + _c0.r * offset;
   return fract(st);
  }
",
  "inputs": Array [
    Object {
      "default": 3,
      "name": "reps",
      "type": "float",
    },
    Object {
      "default": 0.5,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "modulateRepeatY",
  "processed": true,
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): processed 19`] = `
Object {
  "glsl": "
  vec2 koch(vec2 _st, float scale, float iters) {
      vec2 uv = _st - 0.5;
    
    uv *= 1.5 * scale;
    
    uv.y += tan((5.0 / 6.0) * 3.14159) * 0.5;
    uv.x = abs(uv.x);
    
    uv = _rotate(uv, vec2(0.5, 0.0), 5.0 / 6.0, true);
    
    float rescaled = 1.0;
    uv.x += 0.5;
    for (int i = 0; i < 12; i++) {
        if (i >= int(iters)) {
          break;
        }
        
        uv *= 3.0;
        rescaled *= 3.0;
        uv.x -= 1.5;
        
        uv.x = abs(uv.x);
        
        uv.x -= 0.5;
        uv = _rotate(uv, vec2(0.0, 0.0), 2.0 / 3.0, false);
    }
    
    uv /= rescaled;
    
    return uv;

  }
",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "scale",
      "type": "float",
    },
    Object {
      "default": 5,
      "name": "iters",
      "type": "float",
    },
  ],
  "name": "koch",
  "processed": true,
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): processed 20`] = `
Object {
  "glsl": "
  vec2 kaleid(vec2 _st, float nSides) {
         vec2 st = _st;
   st -= 0.5;
   float r = length(st);
   float a = atan(st.y, st.x);
   float pi = 2.*3.1416;
   a = mod(a,pi/nSides);
   a = abs(a-pi/nSides/2.);
   return r*vec2(cos(a), sin(a));
  }
",
  "inputs": Array [
    Object {
      "default": 4,
      "name": "nSides",
      "type": "float",
    },
  ],
  "name": "kaleid",
  "processed": true,
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): processed 21`] = `
Object {
  "glsl": "
  vec2 modulateKaleid(vec2 _st, vec4 _c0, float nSides) {
         vec2 st = _st - 0.5;
   float r = length(st);
   float a = atan(st.y, st.x);
   float pi = 2.*3.1416;
   a = mod(a,pi/nSides);
   a = abs(a-pi/nSides/2.);
   return (_c0.r+r)*vec2(cos(a), sin(a));
  }
",
  "inputs": Array [
    Object {
      "default": 4,
      "name": "nSides",
      "type": "float",
    },
  ],
  "name": "modulateKaleid",
  "processed": true,
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): processed 22`] = `
Object {
  "glsl": "
  vec2 scroll(vec2 _st, float scrollX, float scrollY, float speedX, float speedY) {
      
   _st.x += scrollX + time*speedX;
   _st.y += scrollY + time*speedY;
   return fract(_st);
  }
",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "scrollX",
      "type": "float",
    },
    Object {
      "default": 0.5,
      "name": "scrollY",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "speedX",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "speedY",
      "type": "float",
    },
  ],
  "name": "scroll",
  "processed": true,
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): processed 23`] = `
Object {
  "glsl": "
  vec2 scrollX(vec2 _st, float scrollX, float speed) {
         _st.x += scrollX + time*speed;
   return fract(_st);
  }
",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "scrollX",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "speed",
      "type": "float",
    },
  ],
  "name": "scrollX",
  "processed": true,
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): processed 24`] = `
Object {
  "glsl": "
  vec2 modulateScrollX(vec2 _st, vec4 _c0, float scrollX, float speed) {
         _st.x += _c0.r*scrollX + time*speed;
   return fract(_st);
  }
",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "scrollX",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "speed",
      "type": "float",
    },
  ],
  "name": "modulateScrollX",
  "processed": true,
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): processed 25`] = `
Object {
  "glsl": "
  vec2 scrollY(vec2 _st, float scrollY, float speed) {
         _st.y += scrollY + time*speed;
   return fract(_st);
  }
",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "scrollY",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "speed",
      "type": "float",
    },
  ],
  "name": "scrollY",
  "processed": true,
  "type": "coord",
}
`;

exports[`processGlsl($definition.name): processed 26`] = `
Object {
  "glsl": "
  vec2 modulateScrollY(vec2 _st, vec4 _c0, float scrollY, float speed) {
         _st.y += _c0.r*scrollY + time*speed;
   return fract(_st);
  }
",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "scrollY",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "speed",
      "type": "float",
    },
  ],
  "name": "modulateScrollY",
  "processed": true,
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): processed 27`] = `
Object {
  "glsl": "
  vec4 add(vec4 _c0, vec4 _c1, float amount) {
         return (_c0+_c1)*amount + _c0*(1.0-amount);
  }
",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "add",
  "processed": true,
  "type": "combine",
}
`;

exports[`processGlsl($definition.name): processed 28`] = `
Object {
  "glsl": "
  vec4 sub(vec4 _c0, vec4 _c1, float amount) {
         return (_c0-_c1)*amount + _c0*(1.0-amount);
  }
",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "sub",
  "processed": true,
  "type": "combine",
}
`;

exports[`processGlsl($definition.name): processed 29`] = `
Object {
  "glsl": "
  vec4 layer(vec4 _c0, vec4 _c1) {
         return vec4(mix(_c0.rgb, _c1.rgb, _c1.a), _c0.a+_c1.a);
  }
",
  "inputs": Array [],
  "name": "layer",
  "processed": true,
  "type": "combine",
}
`;

exports[`processGlsl($definition.name): processed 30`] = `
Object {
  "glsl": "
  vec4 blend(vec4 _c0, vec4 _c1, float amount) {
         return _c0*(1.0-amount)+_c1*amount;
  }
",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "blend",
  "processed": true,
  "type": "combine",
}
`;

exports[`processGlsl($definition.name): processed 31`] = `
Object {
  "glsl": "
  vec4 mult(vec4 _c0, vec4 _c1, float amount) {
         return _c0*(1.0-amount)+(_c0*_c1)*amount;
  }
",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "mult",
  "processed": true,
  "type": "combine",
}
`;

exports[`processGlsl($definition.name): processed 32`] = `
Object {
  "glsl": "
  vec4 diff(vec4 _c0, vec4 _c1) {
         return vec4(abs(_c0.rgb-_c1.rgb), max(_c0.a, _c1.a));
  }
",
  "inputs": Array [],
  "name": "diff",
  "processed": true,
  "type": "combine",
}
`;

exports[`processGlsl($definition.name): processed 33`] = `
Object {
  "glsl": "
  vec2 modulate(vec2 _st, vec4 _c0, float amount) {
         //  return fract(st+(_c0.xy-0.5)*amount);
   return _st + _c0.xy*amount;
  }
",
  "inputs": Array [
    Object {
      "default": 0.1,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "modulate",
  "processed": true,
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): processed 34`] = `
Object {
  "glsl": "
  vec2 modulateScale(vec2 _st, vec4 _c0, float multiple, float offset) {
         vec2 xy = _st - vec2(0.5);
   xy*=(1.0/vec2(offset + multiple*_c0.r, offset + multiple*_c0.g));
   xy+=vec2(0.5);
   return xy;
  }
",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "multiple",
      "type": "float",
    },
    Object {
      "default": 1,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "modulateScale",
  "processed": true,
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): processed 35`] = `
Object {
  "glsl": "
  vec2 modulatePixelate(vec2 _st, vec4 _c0, float multiple, float offset) {
         vec2 xy = vec2(offset + _c0.x*multiple, offset + _c0.y*multiple);
   return (floor(_st * xy) + 0.5)/xy;
  }
",
  "inputs": Array [
    Object {
      "default": 10,
      "name": "multiple",
      "type": "float",
    },
    Object {
      "default": 3,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "modulatePixelate",
  "processed": true,
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): processed 36`] = `
Object {
  "glsl": "
  vec2 modulateRotate(vec2 _st, vec4 _c0, float multiple, float offset) {
         vec2 xy = _st - vec2(0.5);
   float angle = offset + _c0.x * multiple;
   xy = mat2(cos(angle),-sin(angle), sin(angle),cos(angle))*xy;
   xy += 0.5;
   return xy;
  }
",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "multiple",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "modulateRotate",
  "processed": true,
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): processed 37`] = `
Object {
  "glsl": "
  vec2 modulateHue(vec2 _st, vec4 _c0, float amount) {
         return _st + (vec2(_c0.g - _c0.r, _c0.b - _c0.g) * amount * 1.0/resolution);
  }
",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "modulateHue",
  "processed": true,
  "type": "combineCoord",
}
`;

exports[`processGlsl($definition.name): processed 38`] = `
Object {
  "glsl": "
  vec4 invert(vec4 _c0, float amount) {
         return vec4((1.0-_c0.rgb)*amount + _c0.rgb*(1.0-amount), _c0.a);
  }
",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "invert",
  "processed": true,
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 39`] = `
Object {
  "glsl": "
  vec4 contrast(vec4 _c0, float amount) {
         vec4 c = (_c0-vec4(0.5))*vec4(amount) + vec4(0.5);
   return vec4(c.rgb, _c0.a);
  }
",
  "inputs": Array [
    Object {
      "default": 1.6,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "contrast",
  "processed": true,
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 40`] = `
Object {
  "glsl": "
  vec4 brightness(vec4 _c0, float amount) {
         return vec4(_c0.rgb + vec3(amount), _c0.a);
  }
",
  "inputs": Array [
    Object {
      "default": 0.4,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "brightness",
  "processed": true,
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 41`] = `
Object {
  "glsl": "
  vec4 mask(vec4 _c0, vec4 _c1) {
         float a = _luminance(_c1.rgb);
   return vec4(_c0.rgb*a, a);
  }
",
  "inputs": Array [],
  "name": "mask",
  "processed": true,
  "type": "combine",
}
`;

exports[`processGlsl($definition.name): processed 42`] = `
Object {
  "glsl": "
  vec4 luma(vec4 _c0, float threshold, float tolerance) {
         float a = smoothstep(threshold-(tolerance+0.0000001), threshold+(tolerance+0.0000001), _luminance(_c0.rgb));
   return vec4(_c0.rgb*a, a);
  }
",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "threshold",
      "type": "float",
    },
    Object {
      "default": 0.1,
      "name": "tolerance",
      "type": "float",
    },
  ],
  "name": "luma",
  "processed": true,
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 43`] = `
Object {
  "glsl": "
  vec4 thresh(vec4 _c0, float threshold, float tolerance) {
         return vec4(vec3(smoothstep(threshold-(tolerance+0.0000001), threshold+(tolerance+0.0000001), _luminance(_c0.rgb))), _c0.a);
  }
",
  "inputs": Array [
    Object {
      "default": 0.5,
      "name": "threshold",
      "type": "float",
    },
    Object {
      "default": 0.04,
      "name": "tolerance",
      "type": "float",
    },
  ],
  "name": "thresh",
  "processed": true,
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 44`] = `
Object {
  "glsl": "
  vec4 color(vec4 _c0, float r, float g, float b, float a) {
         vec4 c = vec4(r, g, b, a);
   vec4 pos = step(0.0, c); // detect whether negative
   // if > 0, return r * _c0
   // if < 0 return (1.0-r) * _c0
   return vec4(mix((1.0-_c0)*abs(c), c*_c0, pos));
  }
",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "r",
      "type": "float",
    },
    Object {
      "default": 1,
      "name": "g",
      "type": "float",
    },
    Object {
      "default": 1,
      "name": "b",
      "type": "float",
    },
    Object {
      "default": 1,
      "name": "a",
      "type": "float",
    },
  ],
  "name": "color",
  "processed": true,
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 45`] = `
Object {
  "glsl": "
  vec4 saturate(vec4 _c0, float amount) {
         const vec3 W = vec3(0.2125, 0.7154, 0.0721);
   vec3 intensity = vec3(dot(_c0.rgb, W));
   return vec4(mix(intensity, _c0.rgb, amount), _c0.a);
  }
",
  "inputs": Array [
    Object {
      "default": 2,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "saturate",
  "processed": true,
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 46`] = `
Object {
  "glsl": "
  vec4 hue(vec4 _c0, float hue) {
         vec3 c = _rgbToHsv(_c0.rgb);
   c.r += hue;
   //  c.r = fract(c.r);
   return vec4(_hsvToRgb(c), _c0.a);
  }
",
  "inputs": Array [
    Object {
      "default": 0.4,
      "name": "hue",
      "type": "float",
    },
  ],
  "name": "hue",
  "processed": true,
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 47`] = `
Object {
  "glsl": "
  vec4 colorama(vec4 _c0, float amount) {
         vec3 c = _rgbToHsv(_c0.rgb);
   c += vec3(amount);
   c = _hsvToRgb(c);
   c = fract(c);
   return vec4(c, _c0.a);
  }
",
  "inputs": Array [
    Object {
      "default": 0.005,
      "name": "amount",
      "type": "float",
    },
  ],
  "name": "colorama",
  "processed": true,
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 48`] = `
Object {
  "glsl": "
  vec4 prev(vec2 _st) {
         return texture2D(prevBuffer, fract(_st));
  }
",
  "inputs": Array [],
  "name": "prev",
  "processed": true,
  "type": "src",
}
`;

exports[`processGlsl($definition.name): processed 49`] = `
Object {
  "glsl": "
  vec4 sum(vec4 _c0, vec4 scale) {
         vec4 v = _c0 * s;
   return v.r + v.g + v.b + v.a;
   }
   float sum(vec2 _st, vec4 s) { // vec4 is not a typo, because argument type is not overloaded
   vec2 v = _st.xy * s.xy;
   return v.x + v.y;
  }
",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "scale",
      "type": "vec4",
    },
  ],
  "name": "sum",
  "processed": true,
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 50`] = `
Object {
  "glsl": "
  vec4 r(vec4 _c0, float scale, float offset) {
         return vec4(_c0.r * scale + offset);
  }
",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "scale",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "r",
  "processed": true,
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 51`] = `
Object {
  "glsl": "
  vec4 g(vec4 _c0, float scale, float offset) {
         return vec4(_c0.g * scale + offset);
  }
",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "scale",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "g",
  "processed": true,
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 52`] = `
Object {
  "glsl": "
  vec4 b(vec4 _c0, float scale, float offset) {
         return vec4(_c0.b * scale + offset);
  }
",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "scale",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "b",
  "processed": true,
  "type": "color",
}
`;

exports[`processGlsl($definition.name): processed 53`] = `
Object {
  "glsl": "
  vec4 a(vec4 _c0, float scale, float offset) {
         return vec4(_c0.a * scale + offset);
  }
",
  "inputs": Array [
    Object {
      "default": 1,
      "name": "scale",
      "type": "float",
    },
    Object {
      "default": 0,
      "name": "offset",
      "type": "float",
    },
  ],
  "name": "a",
  "processed": true,
  "type": "color",
}
`;
